[ccpp-arg-table]
  name = unicon_wrapper_init
  type = scheme
[mpirank]
  standard_name = mpi_rank
  long_name = current MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[mpiroot]
  standard_name = mpi_root
  long_name = master MPI-rank
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F

########################################################################
[ccpp-arg-table]
  name = unicon_wrapper_finalize
  type = scheme

########################################################################
[ccpp-arg-table]
  name = unicon_wrapper_run
  type = scheme
[im]
  standard_name = horizontal_dimension
  long_name = horizontal dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[km]
  standard_name = vertical_dimension
  long_name = vertical layer dimension
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[ntracer]
  standard_name = number_of_tracers
  long_name = number of tracers
  units = count
  dimensions = ()
  type = integer
  intent = in
  optional = F
[dt]
  standard_name = time_step_for_physics
  long_name = physics time step
  units = s
  dimensions = ()
  type = real
  kind = kind_phys
  intent = in
  optional = F
[kdt]
  standard_name = index_of_time_step
  long_name = current forecast iteration
  units = index
  dimensions = ()
  type = integer
  intent = in
  optional = F
[ps0]
  standard_name = air_pressure_at_interface
  long_name = pressure at layer interface
  units = Pa
  dimensions = (horizontal_dimension,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[phii]
  standard_name = geopotential_at_interface
  long_name = geopotential at model layer interfaces
  units = m2 s-2
  dimensions = (horizontal_dimension,vertical_dimension_plus_one)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[p0]
  standard_name = air_pressure
  long_name = layer mean pressure
  units = Pa
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[phil]
  standard_name = geopotential
  long_name = geopotential at model layer centers
  units = m2 s-2
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[dp0]
  standard_name = air_pressure_difference_between_midlayers
  long_name = air pressure difference between midlayers
  units = Pa
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[u0]
  standard_name = x_wind_updated_by_physics
  long_name = updated x-direction wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[v0]
  standard_name = y_wind_updated_by_physics
  long_name = updated y-direction wind
  units = m s-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qv0]
  standard_name = water_vapor_specific_humidity
  long_name = water vapor specific humidity
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[ql0]
  standard_name = cloud_condensed_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of cloud water (condensate)
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[qi0]
  standard_name = ice_water_mixing_ratio
  long_name = moist (dry+vapor, no condensates) mixing ratio of ice water
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[tr0]
  standard_name = tracer_concentration_updated_by_physics
  long_name = tracer concentration updated by physics
  units = kg kg-1
  dimensions = (horizontal_dimension,vertical_dimension,number_of_tracers)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[t0]
  standard_name = air_temperature_updated_by_physics
  long_name = temperature updated by physics
  units = K
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[pblh]
  standard_name = atmosphere_boundary_layer_thickness
  long_name = pbl height
  units = m
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[kpblh]
  standard_name = vertical_index_at_top_of_atmosphere_boundary_layer
  long_name = vertical index at top atmospheric boundary layer
  units = index
  dimensions = (horizontal_dimension)
  type = integer
  intent = in
  optional = F
[qflx]
  standard_name = kinematic_surface_upward_latent_heat_flux
  long_name = kinematic surface upward latent heat flux
  units = kg kg-1 m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[shflx]
  standard_name = kinematic_surface_upward_sensible_heat_flux
  long_name = kinematic surface upward sensible heat flux
  units = K m s-1
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[taux]
  standard_name = instantaneous_surface_x_momentum_flux
  long_name = surface momentum flux in the x-direction valid for current call
  units = Pa
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[tauy]
  standard_name = instantaneous_surface_y_momentum_flux
  long_name = surface momentum flux in the y-direction valid for current call
  units = Pa
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[area]
  standard_name = cell_area
  long_name = grid cell area
  units = m2
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = in
  optional = F
[xland]
  standard_name = sea_land_ice_mask
  long_name = landmask: sea/land/ice=0/1/2
  units = flag
  dimensions = (horizontal_dimension)
  type = integer
  intent = in
  optional = F
[raincv]
  standard_name = lwe_thickness_of_deep_convective_precipitation_amount
  long_name = deep convective rainfall amount on physics timestep
  units = m
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = out
  optional = F
[un_cush]
  standard_name = unicon_cush
  long_name = unicon cush
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cushavg]
  standard_name = unicon_cushavg
  long_name = unicon cushavg
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cuorg]
  standard_name = unicon_cuorg
  long_name = unicon cuorg
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_awk_PBL]
  standard_name = unicon_awk_PBL
  long_name = unicon awk PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_delta_thl_PBL]
  standard_name = unicon_delta_thl_PBL
  long_name = unicon delta thl PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_delta_qt_PBL]
  standard_name = unicon_delta_qt_PBL
  long_name = unicon delta qt PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_delta_u_PBL]
  standard_name = unicon_delta_u_PBL
  long_name = unicon delta u PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_delta_v_PBL]
  standard_name = unicon_delta_v_PBL
  long_name = unicon delta v PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_delta_tr_PBL]
  standard_name = unicon_delta_tr_PBL
  long_name = unicon delta tr PBL
  units = none
  dimensions = (horizontal_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cu_cmfum]
  standard_name = unicon_cu_cmfum
  long_name = unicon un cu cmfum
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cu_cmfr]
  standard_name = unicon_cu_cmfr
  long_name = unicon un cu cmfr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cu_thlr]
  standard_name = unicon_cu_thlr
  long_name = unicon un cu thlr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phys
  intent = inout
  optional = F
[un_cu_qtr]
  standard_name = unicon_cu_qtr
  long_name = unicon un cu qtr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_ur]
  standard_name = unicon_cu_ur
  long_name = unicon un cu ur
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_vr]
  standard_name = unicon_cu_vr
  long_name = unicon un cu vr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_qlr]
  standard_name = unicon_cu_qlr
  long_name = unicon un cu qlr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_qir]
  standard_name = unicon_cu_qir
  long_name = unicon un cu qir
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_trr]
  standard_name = unicon_cu_trr
  long_name = unicon un cu trr
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_cmfrd]
  standard_name = unicon_cu_cmfrd
  long_name = unicon un cu cmfrd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_thlrd]
  standard_name = unicon_cu_thlrd
  long_name = unicon un cu thlrd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_qtrd]
  standard_name = unicon_cu_qtrd
  long_name = unicon un cu qtrd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_urd]
  standard_name = unicon_cu_urd
  long_name = unicon un cu urd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_vrd]
  standard_name = unicon_cu_vrd
  long_name = unicon un cu vrd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_qlrd]
  standard_name = unicon_cu_qlrd
  long_name = unicon un cu qlrd
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[un_cu_qird]
  standard_name = unicon_cu_qird
  long_name = unicon un cu qird
  units = none
  dimensions = (horizontal_dimension,vertical_dimension)
  type = real
  kind = kind_phy
  intent = inout
  optional = F
[errmsg]
  standard_name = ccpp_error_message
  long_name = error message for error handling in CCPP
  units = none
  dimensions = ()
  type = character
  kind = len=*
  intent = out
  optional = F
[errflg]
  standard_name = ccpp_error_flag
  long_name = error flag for error handling in CCPP
  units = flag
  dimensions = ()
  type = integer
  intent = out
  optional = F
